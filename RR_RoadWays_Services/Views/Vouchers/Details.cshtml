@model RR_RoadWays_Services.Models.Voucher

@{
    ViewData["Title"] = "Details";
}

<script>
    $(document).ready(function () {
        (function ($) {
        var opt;

        $.fn.printThis = function (options) {
            opt = $.extend({}, $.fn.printThis.defaults, options);

            var $element = (this instanceof jQuery) ? this : $(this);

            var strFrameName = ("printThis-" + (new Date()).getTime());

            var $iframe = $("<iframe id='" + strFrameName + "' style='display:none' src='about:blank'/>");

            if (!opt.debug) { $iframe.css({ position: "absolute", width: "0px", height: "0px", left: "-600px", top: "-600px" }); }

            $iframe.appendTo("body");

            var $doc = $("#" + strFrameName).contents();
            // allow iframe to fully render before action
            setTimeout(function () {

                // import page css
                if (opt.importCSS) {
                    $("link[rel=stylesheet]").each(function () {
                        var href = $(this).attr('href');
                        if (href) {
                            var media = $(this).attr('media') || 'all';
                            $doc.find("head").append("<link type='text/css' rel='stylesheet' href='" + href + "' media='" + media + "'>");
                        }
                    });
                }

                // add another stylesheet
                if (opt.loadCSS) {
                    $doc.find("head").append("<link type='text/css' rel='stylesheet' href='" + opt.loadCSS + "'>");

                }

                //grab outer container
                if (opt.printContainer) { $doc.find("body").append($element.outer()); }
                else { $element.each(function () { $doc.find("body").append($(this).html()); }); }

                //$doc.close();
                // print
                setTimeout(function () { ($iframe[0].contentWindow).print();}, 100);

                //removed iframe after 60 seconds
                setTimeout(
                    function () {
                        $iframe.remove();
                    },
                    (200)
                );
            }, 333);
        }


        $.fn.printThis.defaults = {
            debug: false, //show the iframe for debugging
            importCSS: true, // import page CSS
            printContainer: true, // grab outer container as well as the contents of the selector
            loadCSS: "" //path to additional css file
        };


        jQuery.fn.outer = function () {
            return $($('<div></div>').html(this.clone())).html();
        }
        })(jQuery);
    });
</script>

<div class="form-horizontal">
    <div class="row">
        <div class="col-12 col-md-12 center">
            <input type="button" id="printbutton" class="btn btn-success" value="Print" />
        </div>
    </div>
    <hr />
    <div id="reportprint">
        <div class="row">
            <div class="col-9 col-md-9">
                <h5>Voucher Details</h5>
                <hr />

                <div class="row">
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <strong>Voucher Number: </strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                            @Html.EditorFor(model => model.VoucherNumber, new
                       {
                           htmlAttributes = new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Vehicle</span>
                            </div>
                            @Html.DropDownListFor(model => model.VehicleNumber, (IEnumerable<SelectListItem>)ViewBag.vehicleId, "--- Select Vehicle ---", new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Month</span>
                            </div>
                            @Html.DropDownListFor(model => model.Month, Enumerable.Range(1, 12).Select(x => new SelectListItem { Value = x.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(x) }), "--- Select Month ---", new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Voucher Date</span>
                            </div>
                            @Html.EditorFor(model => model.CreatedDate, new
                       {
                           htmlAttributes = new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                </div>

                <h5>UP Details</h5>
                <hr />
                <div class="row">

                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Departure Date</span>
                            </div>
                            @Html.EditorFor(model => model.UpDate, new
                       {
                           htmlAttributes = new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">From</span>
                            </div>
                            @Html.DropDownListFor(model => model.UpFrom, (IEnumerable<SelectListItem>)ViewBag.UpFrom, "--- Select Company ---", new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>

                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">To</span>
                            </div>
                            @Html.DropDownListFor(model => model.UpTo, (IEnumerable<SelectListItem>)ViewBag.UpTo, "--- Select City ---", new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Amount</span>
                            </div>
                            @Html.EditorFor(model => model.UpAmount, new
                       {
                           htmlAttributes =
    new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-12">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Description</span>
                            </div>
                            @Html.EditorFor(model => model.UpDescription, new
                       {
                           htmlAttributes =
    new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                </div>

                <h5>Down Details</h5>
                <hr />
                <div class="row">
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Return Date</span>
                            </div>
                            @Html.EditorFor(model => model.DownReturnDate, new
                       {
                           htmlAttributes = new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-50" id="inputGroup-sizing-sm">From</span>
                            </div>
                            @Html.DropDownListFor(model => model.DownFrom, (IEnumerable<SelectListItem>)ViewBag.DownFrom, "--- Select City ---", new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-50" id="inputGroup-sizing-sm">To</span>
                            </div>
                            @Html.DropDownListFor(model => model.DownTo, (IEnumerable<SelectListItem>)ViewBag.DownTo, "--- Select City ---", new { @class = "form-control", @disabled = "disabled" })

                        </div>
                    </div>

                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Description</span>
                            </div>
                            @Html.EditorFor(model => model.DownDescription, new
                       {
                           htmlAttributes =
    new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Amount</span>
                            </div>
                            @Html.EditorFor(model => model.DownAmount, new
                       {
                           htmlAttributes =
    new { @class = "form-control", @disabled = "disabled" }
                       })
                        </div>
                    </div>
                    <div class="col-6 col-md-6">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text width-100" id="inputGroup-sizing-sm">Total Amount</span>
                            </div>
                            @{
                                decimal TotalAmdan = 0;
                                TotalAmdan = Convert.ToDecimal(Model.DownAmount) + Convert.ToDecimal(Model.UpAmount);
                                TotalAmdan = Decimal.Parse(TotalAmdan.ToString("0.00"));
                            }
                            <input type="number" id="TotalIncome" class="form-control" readonly="readonly" aria-label="Small" aria-describedby="inputGroup-sizing-sm" value="@TotalAmdan">
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-3 col-md-3">
                <h5>Vehicle Loadings</h5>
                <hr />
                <div class="row">
                    <div class="col-md-7 pl-2">
                        <table id="tbl_VehicleLoading" class="table table-borderless">
                            <thead>
                                <tr>
                                    <th>Sr. No</th>
                                    <th>Vehicle Name</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var LoadingIdAI = 1;
                                }
                                @foreach (var item in Model.VehicleLoading)
                                {
                                    @foreach (var loading in item.VehicleLoadingDetail)
                                    {

                                        <tr>
                                            <td>@LoadingIdAI</td>
                                            <td>@loading.VehicleName</td>
                                            <td>@loading.Description</td>
                                        </tr>
                                        LoadingIdAI++;

                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <h4>Diesel Details</h4>
            </div>

        </div>
        <hr />
        <div class="row">
            <div class="col-md-12">
                <table id="tbl_DieselDetails" class="table table-borderless">
                    <thead>
                        <tr>
                            <th>Sr. No</th>
                            <th>Date</th>
                            <th>Pump Name</th>
                            <th>Litre</th>
                            <th>Rate</th>
                            <th>Amount</th>
                            <th>Oil & Others</th>
                            <th>Amount</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var DieselIdAI = 1;
                            int LtrTotal = 0;
                            decimal fuelAmount = 0;
                            decimal rowAmount = 0;
                            decimal gridDieselAmount = 0;
                            decimal oilandotherAmount = Convert.ToDecimal(Model.OilAmount);
                            decimal AllTotal = 0;
                        }
                        @foreach (var item in Model.VoucherDieselDetails)
                        {
                            fuelAmount = Convert.ToDecimal(@item.Rate) * Convert.ToDecimal(@item.Litre);
                            fuelAmount = Decimal.Parse(fuelAmount.ToString("0.00"));

                            rowAmount = fuelAmount + Convert.ToDecimal(@item.Amount);
                            rowAmount = Decimal.Parse(rowAmount.ToString("0.00"));

                            <tr>
                                <td>@DieselIdAI</td>
                                <td>@item.Date</td>
                                <td>@item.Station.Name</td>
                                <td>@item.Litre</td>
                                <td>@item.Rate</td>
                                <td>@fuelAmount</td>
                                <td>@item.OilAndOthers</td>
                                <td>@item.Amount</td>
                                <td>@rowAmount</td>
                            </tr>
                            DieselIdAI++;
                            LtrTotal += Convert.ToInt32(@item.Litre);
                            gridDieselAmount += Convert.ToDecimal(rowAmount);

                            //Total += Convert.ToDecimal(@item.Amount);
                        }
                        @{
                            AllTotal = Convert.ToDecimal(gridDieselAmount) + Convert.ToDecimal(oilandotherAmount);
                            AllTotal = Decimal.Parse(AllTotal.ToString("0.00"));
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row totalsbg">

            <div class="col-5 col-md-5 pr-2">
                <div class="row">
                    <div class="col-10 col-md-10">
                        <strong>Total Litres</strong>
                    </div>
                    <div class="col-2 col-md-2">
                        <h5 id="TotalLitres">@LtrTotal</h5>
                        @*<input type="text" class="form-control" value="200" aria-label="Small" aria-describedby="inputGroup-sizing-sm">*@
                    </div>
                </div>
            </div>
            <div class="col-1 col-md-1 pl-2"></div>

            <div class="col-1 col-md-1 pl-2"></div>
            <div class="col-5 col-md-5 pr-2">
                <div class="row">
                    <div class="col-6 col-md-6">
                        <strong>Total Diesel</strong>
                    </div>
                    <div class="col-6 col-md-6">
                        @*<input type="text" class="form-control" value="200,000" aria-label="Small" aria-describedby="inputGroup-sizing-sm">*@
                        <h5 id="TotalDiesel">@gridDieselAmount</h5>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6 col-md-6">
                        @Html.DropDownListFor(model => model.OilShopId, (IEnumerable<SelectListItem>)ViewBag.OilShop, "--- Select Oil Shop ---", new { @class = "form-control", @disabled = "disabled" })
                    </div>
                    <div class="col-6 col-md-6">
                        @Html.EditorFor(model => model.OilAmount, new
                   {
                       htmlAttributes =
    new { @class = "form-control", @disabled = "disabled" }
                   })
                        @*<input type="text" id="OilShopAmount" class="form-control" value="98,476" aria-label="Small" aria-describedby="inputGroup-sizing-sm">*@
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6 col-md-6">
                        <strong>Total Amount</strong>
                    </div>

                    <div class="col-6 col-md-6">
                        <h5 id="TotalAmount">@AllTotal</h5>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <h5>Other Expanses</h5>
        <hr />
        <div class="row">
            <div class="col-7 col-md-7 pl-2">
                <table id="tbl_ExpanseDetails" class="table table-borderless">
                    <thead>
                        <tr>
                            <th>Sr. No</th>
                            <th>Others Expense</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var ExpanseIdAI = 1;
                            decimal TotalExpanseCalc = 0;
                        }
                        @foreach (var item in Model.VoucherOthersExpenses)
                        {
                            <tr>
                                <td>@ExpanseIdAI</td>
                                <td>@item.Expanse.HeadName</td>
                                <td>@item.Amount</td>
                            </tr>
                            ExpanseIdAI++;
                            TotalExpanseCalc += Convert.ToDecimal(@item.Amount);
                            TotalExpanseCalc = Decimal.Parse(TotalExpanseCalc.ToString("0.00"));
                        }
                    </tbody>
                </table>
                <div class="row mt-3 totalsbg">

                    <div class="col-4 col-md-4  text-center">
                        Total Expanse
                    </div>
                    <div class="col-8 col-md-8  text-center">
                        <h5 id="totalExpanse">@TotalExpanseCalc</h5>
                    </div>
                </div>
            </div>

            <div class="col-5 col-md-5 pr-2">
                <div class="row">
                    <div class="col-6 col-md-6">
                        Total Amdan
                    </div>
                    <div class="col-6 col-md-6">
                        <h5 id="TotalIncome1">@TotalAmdan</h5>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6 col-md-6">
                        Total Deisel & oil
                    </div>
                    <div class="col-6 col-md-6">
                        <h5 id="TotalDiesel1">@AllTotal</h5>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6 col-md-6">
                        Total Others Expense
                    </div>
                    <div class="col-6 col-md-6">
                        <h5 id="totalExpanse1">@TotalExpanseCalc</h5>
                    </div>
                </div>
                <div class="row mt-3 totalsbg">
                    <div class="col-12 col-md-12  text-center">
                        Trip Profit
                    </div>
                    @{
                        decimal totalProfit = 0;
                        totalProfit = Convert.ToDecimal(TotalAmdan) - (Convert.ToDecimal(AllTotal) + Convert.ToDecimal(TotalExpanseCalc));
                        totalProfit = Decimal.Parse(totalProfit.ToString("0.00"));
                    }
                    <div class="col-12 col-md-12  text-center">
                        <h5 id="totalProfit">@totalProfit</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <a asp-action="Index">Back to List</a>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#printbutton').click(function () {
                $('#reportprint').printThis();
            });
        });

    </script>
</div>
